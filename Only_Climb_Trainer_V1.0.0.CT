<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="42">
  <CheatEntries>
    <CheatEntry>
      <ID>200</ID>
      <Description>"&lt;-----CLICK HERE"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : onlyclimbtogether-Win64-Shipping.exe
  Version:
  Date   : 2023-07-28
  Author : Sky

  This script does blah blah blah
}

[ENABLE]
{$lua}
if syntaxcheck then return end
function tp(target)
    local pBody, body, ppos, origin

    pBody = readPointer("pbody")

    body={
    pCam       = readPointer(pBody)+0x260,
    pLegs      = readPointer(pBody+0x6f0)+0x260,
    pFootprint = readPointer(pBody+0x700)+0x260,
    pHead      = readPointer(pBody+0x708)+0x260,
    pTorso     = readPointer(pBody+0x710)+0x260,
    pBooty     = readPointer(pBody+0x718)+0x260,
    }

    ppos = readPointer("ppos")
    origin = {x=readDouble(ppos), y=readDouble(ppos+8), z=readDouble(ppos+0x10)}

    for k,v in pairs(body) do
      local pos = {x=readDouble(v), y=readDouble(v+8), z=readDouble(v+0x10)}
      local diff = {}
      diff.x = pos.x-origin.x
      diff.y = pos.y-origin.y
      diff.z = pos.z-origin.z
     -- printf("%s diff: %s %s %s %s", k, diff.x, diff.y, diff.z, pos.z)

      writeDouble(v,      target.x+diff.x)
      writeDouble(v+0x8,  target.y+diff.y)
      writeDouble(v+0x10, target.z+diff.z)
    end
--write to player origin:
    writeDouble(ppos,      target.x)
    writeDouble(ppos+0x8,  target.y)
    writeDouble(ppos+0x10, target.z)
--write to player last position:
    writeDouble(ppos-0x138,      target.x)
    writeDouble(ppos-0x138+0x8,  target.y)
    writeDouble(ppos-0x138+0x10, target.z)

    writeInteger("[pvel]+4",  0)
    writeInteger("[pvel]+C",  0)
    writeInteger("[pvel]+14", 0)
end
{$asm}
aobscanmodule(getVel,onlyclimbtogether-Win64-Shipping.exe,0F 10 06 48 8B CB F2 0F 10 4E 10 F2) // should be unique
aobscanmodule(getPos,onlyclimbtogether-Win64-Shipping.exe,0F 10 81 60 02 00 00 48 8D 44 24 20) // should be unique
aobscanmodule(getBody,onlyclimbtogether-Win64-Shipping.exe,48 8B B9 18 03 00 00 4C) // should be unique

alloc(newmem,$1000,getPos)
alloc(newmem2,$1000,getVel)
alloc(newmem3,$1000,getBody)


label(code)
label(return)

label(code2)
label(return2)


label(code3)
label(return3)

newmem:
  push rax
  lea rax,[rcx+260]
  mov [ppos], rax
  pop rax

code:
  movups xmm0,[rcx+00000260]
  jmp return


ppos:
  dq 0
  registersymbol(ppos)

getPos:
  jmp newmem
  nop 2
return:
registersymbol(getPos)

newmem2:
  mov [pvel],rsi

code2:
  movups xmm0,[rsi]
  mov rcx,rbx
  jmp return2

pvel:
  dq 0
  registersymbol(pvel)

getVel:
  jmp newmem2
  nop
return2:
registersymbol(getVel)


newmem3:
 push rax
 lea rax,[rcx+318]
 mov [pbody],rax
 pop rax

code3:
  mov rdi,[rcx+00000318]
  jmp return3

pbody:
  dq 0
  registerSymbol(pbody)
getBody:
  jmp newmem3
  nop 2
return3:
registersymbol(getBody)


[DISABLE]
getPos:
  db 0F 10 81 60 02 00 00
getVel:
  db 0F 10 06 48 8B CB F2 0F
getBody:
  db 48 8B B9 18 03 00 00


unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: onlyclimbtogether-Win64-Shipping.exe+3BD2562

onlyclimbtogether-Win64-Shipping.exe+3BD2534: 0F 85 0A 02 00 00        - jne onlyclimbtogether-Win64-Shipping.exe+3BD2744
onlyclimbtogether-Win64-Shipping.exe+3BD253A: 41 B0 01                 - mov r8b,01
onlyclimbtogether-Win64-Shipping.exe+3BD253D: 41 0F B6 D0              - movzx edx,r8l
onlyclimbtogether-Win64-Shipping.exe+3BD2541: E8 4A 13 9D 00           - call onlyclimbtogether-Win64-Shipping.exe+45A3890
onlyclimbtogether-Win64-Shipping.exe+3BD2546: 48 8B F8                 - mov rdi,rax
onlyclimbtogether-Win64-Shipping.exe+3BD2549: F6 80 9D 02 00 00 04     - test byte ptr [rax+0000029D],04
onlyclimbtogether-Win64-Shipping.exe+3BD2550: 0F 84 EE 01 00 00        - je onlyclimbtogether-Win64-Shipping.exe+3BD2744
onlyclimbtogether-Win64-Shipping.exe+3BD2556: 48 8B 8B 98 01 00 00     - mov rcx,[rbx+00000198]
onlyclimbtogether-Win64-Shipping.exe+3BD255D: 48 85 C9                 - test rcx,rcx
onlyclimbtogether-Win64-Shipping.exe+3BD2560: 74 20                    - je onlyclimbtogether-Win64-Shipping.exe+3BD2582
// ---------- INJECTING HERE ----------
onlyclimbtogether-Win64-Shipping.exe+3BD2562: 0F 10 81 60 02 00 00     - movups xmm0,[rcx+00000260]
// ---------- DONE INJECTING  ----------
onlyclimbtogether-Win64-Shipping.exe+3BD2569: 48 8D 44 24 20           - lea rax,[rsp+20]
onlyclimbtogether-Win64-Shipping.exe+3BD256E: 0F 11 44 24 20           - movups [rsp+20],xmm0
onlyclimbtogether-Win64-Shipping.exe+3BD2573: 0F 10 81 70 02 00 00     - movups xmm0,[rcx+00000270]
onlyclimbtogether-Win64-Shipping.exe+3BD257A: F2 0F 11 44 24 30        - movsd [rsp+30],xmm0
onlyclimbtogether-Win64-Shipping.exe+3BD2580: EB 1F                    - jmp onlyclimbtogether-Win64-Shipping.exe+3BD25A1
onlyclimbtogether-Win64-Shipping.exe+3BD2582: 0F 10 05 4F 06 F8 02     - movups xmm0,[onlyclimbtogether-Win64-Shipping.exe+6B52BD8]
onlyclimbtogether-Win64-Shipping.exe+3BD2589: 48 8D 44 24 38           - lea rax,[rsp+38]
onlyclimbtogether-Win64-Shipping.exe+3BD258E: F2 0F 10 0D 52 06 F8 02  - movsd xmm1,[onlyclimbtogether-Win64-Shipping.exe+6B52BE8]
onlyclimbtogether-Win64-Shipping.exe+3BD2596: 0F 11 44 24 38           - movups [rsp+38],xmm0
onlyclimbtogether-Win64-Shipping.exe+3BD259B: F2 0F 11 4C 24 48        - movsd [rsp+48],xmm1
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>213</ID>
          <Description>"Coords and velocity"</Description>
          <Options moHideChildren="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>204</ID>
              <Description>"X"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Double</VariableType>
              <Address>ppos</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>202</ID>
              <Description>"Y"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Double</VariableType>
              <Address>ppos</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>203</ID>
              <Description>"Z"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Double</VariableType>
              <Address>ppos</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>210</ID>
              <Description>"Velocity X"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Double</VariableType>
              <Address>pvel</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>211</ID>
              <Description>"Velocity Y"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Double</VariableType>
              <Address>pvel</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>212</ID>
              <Description>"Velocity Z"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Double</VariableType>
              <Address>pvel</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>215</ID>
          <Description>"QuickSave"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
if syntaxcheck then return end

[ENABLE]
SavedPos = {}
  SavedPos.x = readDouble("[ppos]")
  SavedPos.y = readDouble("[ppos]+8")
  SavedPos.z = readDouble("[ppos]+10")

createTimer(50, function() memrec.Active = false end)

[DISABLE]

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>112</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>216</ID>
          <Description>"QuickLoad"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
if syntaxcheck then return end

[ENABLE]
if SavedPos == nil then createTimer(50, function() memrec.Active = false end); return end
tp(SavedPos)


createTimer(50, function() memrec.Active = false end)

[DISABLE]

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>113</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>205</ID>
          <Description>"&lt;----------CREATE NEW SAVE LOCATION"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
if syntaxcheck then return end

[ENABLE]

local name = inputQuery("Create new save location","What do you want to name this location?","Default")

if name ~= nil then
  local mr = AddressList.createMemoryRecord()
  mr.Description = name
  mr.Type = 11--script
  mr.Parent = memrec
  mr.Script = ([==[
{$lua}
if syntaxcheck then return end
  [%s]
    local tppos = {x=%s, y=%s, z=%s}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [%s]
  ]==]):format("ENABLE",readDouble("[ppos]"), readDouble("[ppos]+8"), readDouble("[ppos]+10"), "DISABLE")
  createTimer(50, function() memrec.Active = false end)
end

[DISABLE]

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>225</ID>
              <Description>"010 - begin"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-9140.0007258866, y=9733.9987638257, z=83.14993310764}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>226</ID>
              <Description>"020 - red cage dumpster"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-8034.6956754433, y=-1469.7283611032, z=3164.331541314}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>227</ID>
              <Description>"030 - rusty ship dumpster"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-11515.735100887, y=-5974.9525069129, z=7607.0653558061}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>228</ID>
              <Description>"040 - back of rusty ship dumpster"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-5588.5863004433, y=7956.8900069129, z=15771.985915241}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>229</ID>
              <Description>"050 - under highway dumpster"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-8430.0319758866, y=8897.6315763257, z=25156.360584372}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>230</ID>
              <Description>"060 - smoke stack dumpster"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-5765.8011441933, y=2843.2086753314, z=37483.711607206}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>231</ID>
              <Description>"070 - train parkour"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-11544.641350887, y=-1747.1180095407, z=70262.573233104}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>233</ID>
              <Description>"090 - dumpster to planks"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-10094.297600887, y=2149.0602378314, z=90415.670769958}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>234</ID>
              <Description>"100 - dumpster to pirate ship"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-6586.7034879433, y=3243.7457847064, z=93505.304896427}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>235</ID>
              <Description>"110 - dumpster to giant trash cans"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-10540.617913387, y=-2841.3434409564, z=95039.746376125}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>236</ID>
              <Description>"120 - dumpster to books"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-7552.1566129433, y=2281.9137534564, z=118017.96322845}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>237</ID>
              <Description>"130 - neon parkour"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-1819.3633719858, y=5203.5501631629, z=131137.64200914}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>238</ID>
              <Description>"140 - skyscraper launch"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-8921.3835383866, y=-5304.4564131629, z=141180.92945029}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>239</ID>
              <Description>"150 - aircraft carrier dumpster"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-8822.6804133866, y=-318.70479535393, z=184004.75132035}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>240</ID>
              <Description>"160 - dumpsters from aircraft carrier"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-16640.376451773, y=9852.2175138257, z=186060.17275247}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>241</ID>
              <Description>"170 - to trampoline dumpster"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-21291.376451773, y=6098.6361006629, z=188650.1761815}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>242</ID>
              <Description>"180 - trampoline dumpster"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-17457.470201773, y=7025.0696944129, z=193058.61587359}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>243</ID>
              <Description>"190 - to bounce house"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-17457.470201773, y=7025.0696944129, z=193058.65511322}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>244</ID>
              <Description>"200 - viking parkour"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-16812.392076773, y=-261.18868207268, z=216938.05050731}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>245</ID>
              <Description>"210 - wood planks parkour"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-13575.891350887, y=-10804.287826326, z=223007.0664035}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>246</ID>
              <Description>"220 - dumpster to rocks"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=3880.8302595966, y=-2227.8258628314, z=229436.97099261}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>247</ID>
              <Description>"230 - dumpster over bridge"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=3630.6251814716, y=3046.6989097064, z=235085.59416816}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>248</ID>
              <Description>"240 - red pipes"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=2281.7853377216, y=5933.5189131629, z=240951.01164857}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>249</ID>
              <Description>"250 - cieling fans"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-1149.8965751108, y=13665.272201326, z=243216.68620399}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>250</ID>
              <Description>"260 - dumpster to building top"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-6927.6683316933, y=5830.7532881629, z=248823.61422851}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>251</ID>
              <Description>"270 - dumpster to waifu head"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-23531.470201773, y=16002.780013826, z=251229.65125591}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>252</ID>
              <Description>"280 - temple at water edge"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-15518.992913387, y=2879.5914878314, z=287880.81703363}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>253</ID>
              <Description>"290 - dumpster to glowy head"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-18394.696771598, y=-551.35421126036, z=288875.87172661}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>254</ID>
              <Description>"300 - glowy head dumpster"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-13301.418698299, y=8316.9017551658, z=298046.44679994}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>255</ID>
              <Description>"310 - end triple beds"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
  [ENABLE]
    local tppos = {x=-2069.6671745747, y=5189.5758775829, z=313812.79799217}
    tp(tppos)

    createTimer(50, function() memrec.Active = false end)
  [DISABLE]
  
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>222</ID>
          <Description>"noclip"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : onlyclimbtogether-Win64-Shipping.exe
  Version:
  Date   : 2023-07-30
  Author : Sky

  This script does blah blah blah
}

[ENABLE]
{$lua}
if syntaxcheck then return end
----------------------------
local DEFAULT_SPEED = 75
local DEFAULT_BOOST = 3
---------------------------


if flytm then flytm.destroy() end

local alloc = allocateMemory(8)
registerSymbol("speed",alloc)
registerSymbol("boost",alloc+4)
writeFloat("speed",DEFAULT_SPEED)
writeFloat("boost",DEFAULT_BOOST)

flytm = createTimer()
flytm.Interval = 1

flytm.OnTimer = function()
    writeDouble("[pVel]",0)
    writeDouble("[pVel]+8",0)
    writeDouble("[pVel]+10",0)
	if getForegroundProcess() ~= getOpenedProcessID() then return end
    local atan2 = math.atan2
	local sin = math.sin
	local cos = math.cos

    local baseSpeed=readFloat("speed")/10
	local speed = baseSpeed
--writeFloat("[ppos]+74",0)--velocity
    local isKeyPressed = isKeyPressed

	local w = isKeyPressed(VK_W)
	local a = isKeyPressed(VK_A)
	local s = isKeyPressed(VK_S)
	local d = isKeyPressed(VK_D)



	local vx = 0
	local vy = 0

	x,y,z = readDouble("[ppos]"),readDouble("[ppos]+8"),readDouble("[ppos]+10")
	cx,cy,cz = readDouble("[pvec]"),readDouble("[pvec]+20"),readDouble("[pvec]+40")


    if isKeyPressed(VK_SHIFT) then speed = baseSpeed*readFloat("boost") end
    if isKeyPressed(VK_SPACE) then
       local tppos = {x=x,y=y,z=z+speed}
       tp(tppos)
    end
    if not (w or a or s or d) then return end
	if not(x and y and z and cx and cy and cz) then return end
	if w then vx,vy = vx+1, vy+0 end
	if s then vx,vy = vx-1, vy+0;cz = -cz end
	if a then vx,vy = vx+0, vy-1;cz = 0 end
	if d then vx,vy = vx+0, vy+1;cz = 0 end






	local ang = atan2(vy,vx)
	ang = atan2(cy,cx)+ang

	cx = cos(ang)
	cy = sin(ang)






	local dst = (cx^2)+(cy^2)

	local acoscy = math.acos(math.abs(cz))
	cx = (cx/dst)*acoscy
	cy = (cy/dst)*acoscy



    local tppos = {x=x+cx*speed, y=y+cy*speed, z=z+cz*speed}
    tp(tppos)


end

{$asm}

aobscanmodule(killGravity,onlyclimbtogether-Win64-Shipping.exe,F2 44 0F 11 87 C8 00 00 00) // should be unique
aobscanmodule(getVec,onlyclimbtogether-Win64-Shipping.exe,0F 11 8B 00 03 00 00 0F 28 87) // should be unique
alloc(newmem,$1000,killGravity)
alloc(newmem2,$1000,getVec)

label(code)
label(return)

label(code2)
label(return2)

newmem:

code:
  //movsd [rdi+000000C8],xmm8
  jmp return

killGravity:
  jmp newmem
  nop 4
return:
registersymbol(killGravity)


newmem2:
 push rax
 lea rax,[rbx+308]
 mov [pVec], rax
 pop rax

code2:
  movups [rbx+00000300],xmm1
  jmp return2

pVec:
  dq 0
  registerSymbol(pVec)

getVec:
  jmp newmem2
  nop 2
return2:
registersymbol(getVec)



[DISABLE]
{$lua}
if syntaxcheck then return end
flytm.destroy()
deAlloc("speed")

{$asm}

killGravity:
  db F2 44 0F 11 87 C8 00 00 00
getVec:
  db 0F 11 8B 00 03 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: onlyclimbtogether-Win64-Shipping.exe+3DD8D45

onlyclimbtogether-Win64-Shipping.exe+3DD8D04: F2 0F 10 8D 30 01 00 00     - movsd xmm1,[rbp+00000130]
onlyclimbtogether-Win64-Shipping.exe+3DD8D0C: 0F 10 85 20 01 00 00        - movups xmm0,[rbp+00000120]
onlyclimbtogether-Win64-Shipping.exe+3DD8D13: F3 44 0F 11 4C 24 20        - movss [rsp+20],xmm9
onlyclimbtogether-Win64-Shipping.exe+3DD8D1A: 0F 11 87 98 02 00 00        - movups [rdi+00000298],xmm0
onlyclimbtogether-Win64-Shipping.exe+3DD8D21: F2 0F 11 8F A8 02 00 00     - movsd [rdi+000002A8],xmm1
onlyclimbtogether-Win64-Shipping.exe+3DD8D29: 41 0F 28 CA                 - movaps xmm1,xmm10
onlyclimbtogether-Win64-Shipping.exe+3DD8D2D: 48 8B 07                    - mov rax,[rdi]
onlyclimbtogether-Win64-Shipping.exe+3DD8D30: F3 0F 10 97 2C 02 00 00     - movss xmm2,[rdi+0000022C]
onlyclimbtogether-Win64-Shipping.exe+3DD8D38: 4C 89 AF C8 00 00 00        - mov [rdi+000000C8],r13
onlyclimbtogether-Win64-Shipping.exe+3DD8D3F: FF 90 48 07 00 00           - call qword ptr [rax+00000748]
// ---------- INJECTING HERE ----------
onlyclimbtogether-Win64-Shipping.exe+3DD8D45: F2 44 0F 11 87 C8 00 00 00  - movsd [rdi+000000C8],xmm8
// ---------- DONE INJECTING  ----------
onlyclimbtogether-Win64-Shipping.exe+3DD8D4E: 0F 11 BF 98 02 00 00        - movups [rdi+00000298],xmm7
onlyclimbtogether-Win64-Shipping.exe+3DD8D55: F2 0F 11 B7 A8 02 00 00     - movsd [rdi+000002A8],xmm6
onlyclimbtogether-Win64-Shipping.exe+3DD8D5D: 48 8B 07                    - mov rax,[rdi]
onlyclimbtogether-Win64-Shipping.exe+3DD8D60: 48 8B CF                    - mov rcx,rdi
onlyclimbtogether-Win64-Shipping.exe+3DD8D63: FF 90 98 04 00 00           - call qword ptr [rax+00000498]
onlyclimbtogether-Win64-Shipping.exe+3DD8D69: 48 8B 87 68 01 00 00        - mov rax,[rdi+00000168]
onlyclimbtogether-Win64-Shipping.exe+3DD8D70: 0F 57 D2                    - xorps xmm2,xmm2
onlyclimbtogether-Win64-Shipping.exe+3DD8D73: F3 0F 5A D0                 - cvtss2sd xmm2,xmm0
onlyclimbtogether-Win64-Shipping.exe+3DD8D77: C6 44 24 30 00              - mov byte ptr [rsp+30],00
onlyclimbtogether-Win64-Shipping.exe+3DD8D7C: 0F 57 C9                    - xorps xmm1,xmm1
}
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>116</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>223</ID>
              <Description>"Speed"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>speed</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>224</ID>
              <Description>"Boost(shift)"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>boost</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :mov [rdi+000000C8],r13</Description>
      <AddressString>onlyclimbtogether-Win64-Shipping.exe+3DD8D38</AddressString>
      <Before>
        <Byte>97</Byte>
        <Byte>2C</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>4C</Byte>
        <Byte>89</Byte>
        <Byte>AF</Byte>
        <Byte>C8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>FF</Byte>
        <Byte>90</Byte>
        <Byte>48</Byte>
        <Byte>07</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movsd [rdi+000000C8],xmm8</Description>
      <AddressString>onlyclimbtogether-Win64-Shipping.exe+3DD8D45</AddressString>
      <Before>
        <Byte>90</Byte>
        <Byte>48</Byte>
        <Byte>07</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F2</Byte>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>87</Byte>
        <Byte>C8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>BF</Byte>
        <Byte>98</Byte>
        <Byte>02</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>speed</Name>
      <Address>25F9DD60000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>boost</Name>
      <Address>25F9DD60004</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Structures StructVersion="2">
    <Structure Name="unnamed structure" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="0" Vartype="Pointer" Bytesize="8" RLECount="6" OffsetHex="00000000" DisplayMethod="unsigned integer"/>
        <Element Offset="48" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00000030" Description="Pointer to instance of UNiagaraComponent" DisplayMethod="unsigned integer"/>
        <Element Offset="72" Vartype="Pointer" Bytesize="8" RLECount="45" OffsetHex="00000048" DisplayMethod="unsigned integer"/>
        <Element Offset="432" Vartype="Pointer" Bytesize="8" OffsetHex="000001B0" Description="Pointer to instance of UNiagaraComponent" DisplayMethod="unsigned integer"/>
        <Element Offset="440" Vartype="Pointer" Bytesize="8" RLECount="13" OffsetHex="000001B8" DisplayMethod="unsigned integer"/>
        <Element Offset="544" Vartype="Pointer" Bytesize="8" RLECount="7" OffsetHex="00000220" Description="Pointer to instance of UNiagaraComponent" DisplayMethod="unsigned integer"/>
        <Element Offset="600" Vartype="Pointer" Bytesize="8" RLECount="87" OffsetHex="00000258" DisplayMethod="unsigned integer"/>
        <Element Offset="1296" Vartype="Pointer" Bytesize="8" RLECount="5" OffsetHex="00000510" Description="Pointer to instance of UNiagaraComponent" DisplayMethod="unsigned integer"/>
        <Element Offset="1336" Vartype="Pointer" Bytesize="8" RLECount="63" OffsetHex="00000538" DisplayMethod="unsigned integer"/>
        <Element Offset="1840" Vartype="Pointer" Bytesize="8" OffsetHex="00000730" Description="Pointer to instance of UNiagaraComponent" DisplayMethod="unsigned integer"/>
        <Element Offset="1848" Vartype="Pointer" Bytesize="8" RLECount="27" OffsetHex="00000738" DisplayMethod="unsigned integer"/>
        <Element Offset="2064" Vartype="Pointer" Bytesize="8" OffsetHex="00000810" Description="Pointer to instance of UNiagaraComponent" DisplayMethod="unsigned integer"/>
        <Element Offset="2072" Vartype="Pointer" Bytesize="8" RLECount="38" OffsetHex="00000818" DisplayMethod="unsigned integer"/>
        <Element Offset="2376" Vartype="Pointer" Bytesize="8" OffsetHex="00000948" Description="Pointer to instance of UNiagaraComponent" DisplayMethod="unsigned integer"/>
        <Element Offset="2384" Vartype="Pointer" Bytesize="8" RLECount="8" OffsetHex="00000950" DisplayMethod="unsigned integer"/>
        <Element Offset="2448" Vartype="Pointer" Bytesize="8" OffsetHex="00000990" Description="Pointer to instance of UNiagaraComponent" DisplayMethod="unsigned integer"/>
        <Element Offset="2456" Vartype="Pointer" Bytesize="8" RLECount="6" OffsetHex="00000998" DisplayMethod="unsigned integer"/>
        <Element Offset="2504" Vartype="Pointer" Bytesize="8" RLECount="4" OffsetHex="000009C8" Description="Pointer to instance of UNiagaraComponent" DisplayMethod="unsigned integer"/>
        <Element Offset="2536" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="000009E8" DisplayMethod="unsigned integer"/>
        <Element Offset="2560" Vartype="Pointer" Bytesize="8" RLECount="6" OffsetHex="00000A00" Description="Pointer to instance of UNiagaraComponent" DisplayMethod="unsigned integer"/>
        <Element Offset="2608" Vartype="Pointer" Bytesize="8" OffsetHex="00000A30" DisplayMethod="unsigned integer"/>
        <Element Offset="2616" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000A38" Description="Pointer to instance of UNiagaraComponent" DisplayMethod="unsigned integer"/>
        <Element Offset="2632" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000A48" DisplayMethod="unsigned integer"/>
        <Element Offset="2636" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A4C" DisplayMethod="unsigned integer"/>
        <Element Offset="2640" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000A50" DisplayMethod="unsigned integer"/>
        <Element Offset="2644" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A54" DisplayMethod="unsigned integer"/>
        <Element Offset="2648" Vartype="String" Bytesize="4" OffsetHex="00000A58" DisplayMethod="unsigned integer"/>
        <Element Offset="2652" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A5C" DisplayMethod="unsigned integer"/>
        <Element Offset="2656" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000A60" DisplayMethod="unsigned integer"/>
        <Element Offset="2660" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A64" DisplayMethod="unsigned integer"/>
        <Element Offset="2664" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000A68" DisplayMethod="unsigned integer"/>
        <Element Offset="2668" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A6C" DisplayMethod="unsigned integer"/>
        <Element Offset="2672" Vartype="String" Bytesize="4" OffsetHex="00000A70" DisplayMethod="unsigned integer"/>
        <Element Offset="2676" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A74" DisplayMethod="unsigned integer"/>
        <Element Offset="2680" Vartype="Pointer" Bytesize="8" RLECount="4" OffsetHex="00000A78" DisplayMethod="unsigned integer"/>
        <Element Offset="2712" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000A98" DisplayMethod="unsigned integer"/>
        <Element Offset="2716" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000A9C" DisplayMethod="unsigned integer"/>
        <Element Offset="2720" Vartype="String" Bytesize="4" OffsetHex="00000AA0" DisplayMethod="unsigned integer"/>
        <Element Offset="2724" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000AA4" DisplayMethod="unsigned integer"/>
        <Element Offset="2728" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000AA8" DisplayMethod="unsigned integer"/>
        <Element Offset="2732" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000AAC" DisplayMethod="unsigned integer"/>
        <Element Offset="2736" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000AB0" DisplayMethod="unsigned integer"/>
        <Element Offset="2740" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000AB4" DisplayMethod="unsigned integer"/>
        <Element Offset="2744" Vartype="String" Bytesize="4" OffsetHex="00000AB8" DisplayMethod="unsigned integer"/>
        <Element Offset="2748" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000ABC" DisplayMethod="unsigned integer"/>
        <Element Offset="2752" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000AC0" DisplayMethod="unsigned integer"/>
        <Element Offset="2756" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000AC4" DisplayMethod="unsigned integer"/>
        <Element Offset="2760" Vartype="Pointer" Bytesize="8" RLECount="3" OffsetHex="00000AC8" DisplayMethod="unsigned integer"/>
        <Element Offset="2784" Vartype="Pointer" Bytesize="8" OffsetHex="00000AE0" Description="Pointer to instance of UNiagaraComponent" DisplayMethod="unsigned integer"/>
        <Element Offset="2792" Vartype="Pointer" Bytesize="8" RLECount="13" OffsetHex="00000AE8" DisplayMethod="unsigned integer"/>
        <Element Offset="2896" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000B50" Description="Pointer to instance of UNiagaraComponent" DisplayMethod="unsigned integer"/>
        <Element Offset="2912" Vartype="Pointer" Bytesize="8" RLECount="24" OffsetHex="00000B60" DisplayMethod="unsigned integer"/>
        <Element Offset="3104" Vartype="Pointer" Bytesize="8" OffsetHex="00000C20" Description="Pointer to instance of UNiagaraComponent" DisplayMethod="unsigned integer"/>
        <Element Offset="3112" Vartype="Pointer" Bytesize="8" RLECount="9" OffsetHex="00000C28" DisplayMethod="unsigned integer"/>
        <Element Offset="3184" Vartype="Pointer" Bytesize="8" OffsetHex="00000C70" Description="Pointer to instance of UNiagaraComponent" DisplayMethod="unsigned integer"/>
        <Element Offset="3192" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000C78" DisplayMethod="unsigned integer"/>
        <Element Offset="3208" Vartype="Pointer" Bytesize="8" OffsetHex="00000C88" Description="Pointer to instance of UNiagaraComponent" DisplayMethod="unsigned integer"/>
        <Element Offset="3216" Vartype="4 Bytes" Bytesize="4" RLECount="4" OffsetHex="00000C90" DisplayMethod="unsigned integer"/>
        <Element Offset="3232" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00000CA0" DisplayMethod="unsigned integer"/>
        <Element Offset="3240" Vartype="Double" Bytesize="8" OffsetHex="00000CA8" DisplayMethod="unsigned integer"/>
        <Element Offset="3248" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00000CB0" DisplayMethod="unsigned integer"/>
        <Element Offset="3256" Vartype="Double" Bytesize="8" OffsetHex="00000CB8" DisplayMethod="unsigned integer"/>
        <Element Offset="3264" Vartype="String" Bytesize="5" OffsetHex="00000CC0" DisplayMethod="unsigned integer"/>
        <Element Offset="3269" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="00000CC5" DisplayMethod="unsigned integer"/>
        <Element Offset="3272" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000CC8" DisplayMethod="unsigned integer"/>
        <Element Offset="3288" Vartype="Byte" Bytesize="1" OffsetHex="00000CD8" DisplayMethod="unsigned integer"/>
        <Element Offset="3289" Vartype="String" Bytesize="5" OffsetHex="00000CD9" DisplayMethod="unsigned integer"/>
        <Element Offset="3294" Vartype="Byte" Bytesize="1" OffsetHex="00000CDE" DisplayMethod="unsigned integer"/>
        <Element Offset="3295" Vartype="2 Bytes" Bytesize="2" OffsetHex="00000CDF" DisplayMethod="unsigned integer"/>
        <Element Offset="3297" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="00000CE1" DisplayMethod="unsigned integer"/>
        <Element Offset="3300" Vartype="Float" Bytesize="4" OffsetHex="00000CE4" DisplayMethod="unsigned integer"/>
        <Element Offset="3304" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000CE8" DisplayMethod="hexadecimal"/>
        <Element Offset="3308" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00000CEC" DisplayMethod="unsigned integer"/>
        <Element Offset="3320" Vartype="Double" Bytesize="8" OffsetHex="00000CF8" DisplayMethod="unsigned integer"/>
        <Element Offset="3328" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00000D00" DisplayMethod="unsigned integer"/>
        <Element Offset="3336" Vartype="Double" Bytesize="8" OffsetHex="00000D08" DisplayMethod="unsigned integer"/>
        <Element Offset="3344" Vartype="String" Bytesize="5" OffsetHex="00000D10" DisplayMethod="unsigned integer"/>
        <Element Offset="3349" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="00000D15" DisplayMethod="unsigned integer"/>
        <Element Offset="3352" Vartype="Pointer" Bytesize="8" RLECount="2" OffsetHex="00000D18" DisplayMethod="unsigned integer"/>
        <Element Offset="3368" Vartype="Byte" Bytesize="1" OffsetHex="00000D28" DisplayMethod="unsigned integer"/>
        <Element Offset="3369" Vartype="String" Bytesize="5" OffsetHex="00000D29" DisplayMethod="unsigned integer"/>
        <Element Offset="3374" Vartype="Byte" Bytesize="1" OffsetHex="00000D2E" DisplayMethod="unsigned integer"/>
        <Element Offset="3375" Vartype="2 Bytes" Bytesize="2" OffsetHex="00000D2F" DisplayMethod="unsigned integer"/>
        <Element Offset="3377" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="00000D31" DisplayMethod="unsigned integer"/>
        <Element Offset="3380" Vartype="Float" Bytesize="4" OffsetHex="00000D34" DisplayMethod="unsigned integer"/>
        <Element Offset="3384" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000D38" DisplayMethod="hexadecimal"/>
        <Element Offset="3388" Vartype="Float" Bytesize="4" RLECount="3" OffsetHex="00000D3C" DisplayMethod="unsigned integer"/>
        <Element Offset="3400" Vartype="Double" Bytesize="8" OffsetHex="00000D48" DisplayMethod="unsigned integer"/>
        <Element Offset="3408" Vartype="Float" Bytesize="4" RLECount="2" OffsetHex="00000D50" DisplayMethod="unsigned integer"/>
        <Element Offset="3416" Vartype="Double" Bytesize="8" OffsetHex="00000D58" DisplayMethod="unsigned integer"/>
        <Element Offset="3424" Vartype="String" Bytesize="5" OffsetHex="00000D60" DisplayMethod="unsigned integer"/>
        <Element Offset="3429" Vartype="Byte" Bytesize="1" RLECount="3" OffsetHex="00000D65" DisplayMethod="unsigned integer"/>
        <Element Offset="3432" Vartype="Pointer" Bytesize="8" OffsetHex="00000D68" DisplayMethod="unsigned integer"/>
        <Element Offset="3440" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000D70" DisplayMethod="unsigned integer"/>
        <Element Offset="3444" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000D74" DisplayMethod="unsigned integer"/>
        <Element Offset="3448" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000D78" DisplayMethod="unsigned integer"/>
        <Element Offset="3456" Vartype="Float" Bytesize="4" OffsetHex="00000D80" DisplayMethod="unsigned integer"/>
        <Element Offset="3460" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000D84" DisplayMethod="unsigned integer"/>
        <Element Offset="3468" Vartype="Float" Bytesize="4" OffsetHex="00000D8C" DisplayMethod="unsigned integer"/>
        <Element Offset="3472" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000D90" DisplayMethod="unsigned integer"/>
        <Element Offset="3480" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000D98" DisplayMethod="unsigned integer"/>
        <Element Offset="3484" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000D9C" DisplayMethod="unsigned integer"/>
        <Element Offset="3492" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000DA4" DisplayMethod="unsigned integer"/>
        <Element Offset="3496" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000DA8" DisplayMethod="unsigned integer"/>
        <Element Offset="3504" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000DB0" DisplayMethod="unsigned integer"/>
        <Element Offset="3508" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000DB4" DisplayMethod="unsigned integer"/>
        <Element Offset="3516" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000DBC" DisplayMethod="unsigned integer"/>
        <Element Offset="3520" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000DC0" DisplayMethod="unsigned integer"/>
        <Element Offset="3528" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000DC8" DisplayMethod="unsigned integer"/>
        <Element Offset="3532" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000DCC" DisplayMethod="unsigned integer"/>
        <Element Offset="3540" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000DD4" DisplayMethod="unsigned integer"/>
        <Element Offset="3544" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000DD8" DisplayMethod="unsigned integer"/>
        <Element Offset="3552" Vartype="Float" Bytesize="4" OffsetHex="00000DE0" DisplayMethod="unsigned integer"/>
        <Element Offset="3556" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000DE4" DisplayMethod="unsigned integer"/>
        <Element Offset="3564" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000DEC" DisplayMethod="unsigned integer"/>
        <Element Offset="3568" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000DF0" DisplayMethod="unsigned integer"/>
        <Element Offset="3576" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000DF8" DisplayMethod="unsigned integer"/>
        <Element Offset="3580" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000DFC" DisplayMethod="unsigned integer"/>
        <Element Offset="3588" Vartype="Float" Bytesize="4" OffsetHex="00000E04" DisplayMethod="unsigned integer"/>
        <Element Offset="3592" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E08" DisplayMethod="unsigned integer"/>
        <Element Offset="3600" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000E10" DisplayMethod="unsigned integer"/>
        <Element Offset="3604" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E14" DisplayMethod="unsigned integer"/>
        <Element Offset="3612" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000E1C" DisplayMethod="unsigned integer"/>
        <Element Offset="3616" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E20" DisplayMethod="unsigned integer"/>
        <Element Offset="3624" Vartype="Float" Bytesize="4" OffsetHex="00000E28" DisplayMethod="unsigned integer"/>
        <Element Offset="3628" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E2C" DisplayMethod="unsigned integer"/>
        <Element Offset="3636" Vartype="Float" Bytesize="4" OffsetHex="00000E34" DisplayMethod="unsigned integer"/>
        <Element Offset="3640" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E38" DisplayMethod="unsigned integer"/>
        <Element Offset="3648" Vartype="Float" Bytesize="4" OffsetHex="00000E40" DisplayMethod="unsigned integer"/>
        <Element Offset="3652" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E44" DisplayMethod="unsigned integer"/>
        <Element Offset="3660" Vartype="Float" Bytesize="4" OffsetHex="00000E4C" DisplayMethod="unsigned integer"/>
        <Element Offset="3664" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E50" DisplayMethod="unsigned integer"/>
        <Element Offset="3672" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000E58" DisplayMethod="unsigned integer"/>
        <Element Offset="3676" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E5C" DisplayMethod="unsigned integer"/>
        <Element Offset="3684" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000E64" DisplayMethod="unsigned integer"/>
        <Element Offset="3688" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E68" DisplayMethod="unsigned integer"/>
        <Element Offset="3696" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000E70" DisplayMethod="unsigned integer"/>
        <Element Offset="3700" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E74" DisplayMethod="unsigned integer"/>
        <Element Offset="3708" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000E7C" DisplayMethod="unsigned integer"/>
        <Element Offset="3712" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E80" DisplayMethod="unsigned integer"/>
        <Element Offset="3720" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000E88" DisplayMethod="unsigned integer"/>
        <Element Offset="3724" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E8C" DisplayMethod="unsigned integer"/>
        <Element Offset="3732" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000E94" DisplayMethod="unsigned integer"/>
        <Element Offset="3736" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000E98" DisplayMethod="unsigned integer"/>
        <Element Offset="3744" Vartype="Float" Bytesize="4" OffsetHex="00000EA0" DisplayMethod="unsigned integer"/>
        <Element Offset="3748" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000EA4" DisplayMethod="unsigned integer"/>
        <Element Offset="3756" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000EAC" DisplayMethod="unsigned integer"/>
        <Element Offset="3760" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000EB0" DisplayMethod="unsigned integer"/>
        <Element Offset="3768" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000EB8" DisplayMethod="unsigned integer"/>
        <Element Offset="3772" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000EBC" DisplayMethod="unsigned integer"/>
        <Element Offset="3780" Vartype="Float" Bytesize="4" OffsetHex="00000EC4" DisplayMethod="unsigned integer"/>
        <Element Offset="3784" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000EC8" DisplayMethod="unsigned integer"/>
        <Element Offset="3792" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000ED0" DisplayMethod="unsigned integer"/>
        <Element Offset="3796" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000ED4" DisplayMethod="unsigned integer"/>
        <Element Offset="3804" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000EDC" DisplayMethod="unsigned integer"/>
        <Element Offset="3808" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000EE0" DisplayMethod="unsigned integer"/>
        <Element Offset="3816" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000EE8" DisplayMethod="unsigned integer"/>
        <Element Offset="3820" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000EEC" DisplayMethod="unsigned integer"/>
        <Element Offset="3828" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000EF4" DisplayMethod="unsigned integer"/>
        <Element Offset="3832" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000EF8" DisplayMethod="unsigned integer"/>
        <Element Offset="3840" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000F00" DisplayMethod="unsigned integer"/>
        <Element Offset="3844" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F04" DisplayMethod="unsigned integer"/>
        <Element Offset="3852" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000F0C" DisplayMethod="unsigned integer"/>
        <Element Offset="3856" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F10" DisplayMethod="unsigned integer"/>
        <Element Offset="3864" Vartype="Float" Bytesize="4" OffsetHex="00000F18" DisplayMethod="unsigned integer"/>
        <Element Offset="3868" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F1C" DisplayMethod="unsigned integer"/>
        <Element Offset="3876" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000F24" DisplayMethod="unsigned integer"/>
        <Element Offset="3880" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F28" DisplayMethod="unsigned integer"/>
        <Element Offset="3888" Vartype="Float" Bytesize="4" OffsetHex="00000F30" DisplayMethod="unsigned integer"/>
        <Element Offset="3892" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F34" DisplayMethod="unsigned integer"/>
        <Element Offset="3900" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000F3C" DisplayMethod="unsigned integer"/>
        <Element Offset="3904" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F40" DisplayMethod="unsigned integer"/>
        <Element Offset="3912" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000F48" DisplayMethod="unsigned integer"/>
        <Element Offset="3916" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F4C" DisplayMethod="unsigned integer"/>
        <Element Offset="3924" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000F54" DisplayMethod="unsigned integer"/>
        <Element Offset="3928" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F58" DisplayMethod="unsigned integer"/>
        <Element Offset="3936" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000F60" DisplayMethod="unsigned integer"/>
        <Element Offset="3940" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F64" DisplayMethod="unsigned integer"/>
        <Element Offset="3948" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000F6C" DisplayMethod="unsigned integer"/>
        <Element Offset="3952" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F70" DisplayMethod="unsigned integer"/>
        <Element Offset="3960" Vartype="Float" Bytesize="4" OffsetHex="00000F78" DisplayMethod="unsigned integer"/>
        <Element Offset="3964" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F7C" DisplayMethod="unsigned integer"/>
        <Element Offset="3972" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000F84" DisplayMethod="unsigned integer"/>
        <Element Offset="3976" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F88" DisplayMethod="unsigned integer"/>
        <Element Offset="3984" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000F90" DisplayMethod="unsigned integer"/>
        <Element Offset="3988" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000F94" DisplayMethod="unsigned integer"/>
        <Element Offset="3996" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000F9C" DisplayMethod="unsigned integer"/>
        <Element Offset="4000" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000FA0" DisplayMethod="unsigned integer"/>
        <Element Offset="4008" Vartype="Float" Bytesize="4" OffsetHex="00000FA8" DisplayMethod="unsigned integer"/>
        <Element Offset="4012" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000FAC" DisplayMethod="unsigned integer"/>
        <Element Offset="4020" Vartype="Float" Bytesize="4" OffsetHex="00000FB4" DisplayMethod="unsigned integer"/>
        <Element Offset="4024" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000FB8" DisplayMethod="unsigned integer"/>
        <Element Offset="4032" Vartype="Float" Bytesize="4" OffsetHex="00000FC0" DisplayMethod="unsigned integer"/>
        <Element Offset="4036" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000FC4" DisplayMethod="unsigned integer"/>
        <Element Offset="4044" Vartype="Float" Bytesize="4" OffsetHex="00000FCC" DisplayMethod="unsigned integer"/>
        <Element Offset="4048" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000FD0" DisplayMethod="unsigned integer"/>
        <Element Offset="4056" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000FD8" DisplayMethod="unsigned integer"/>
        <Element Offset="4060" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000FDC" DisplayMethod="unsigned integer"/>
        <Element Offset="4068" Vartype="Float" Bytesize="4" OffsetHex="00000FE4" DisplayMethod="unsigned integer"/>
        <Element Offset="4072" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000FE8" DisplayMethod="unsigned integer"/>
        <Element Offset="4080" Vartype="Byte" Bytesize="1" RLECount="4" OffsetHex="00000FF0" DisplayMethod="unsigned integer"/>
        <Element Offset="4084" Vartype="4 Bytes" Bytesize="4" RLECount="2" OffsetHex="00000FF4" DisplayMethod="unsigned integer"/>
        <Element Offset="4092" Vartype="Float" Bytesize="4" OffsetHex="00000FFC" DisplayMethod="unsigned integer"/>
      </Elements>
    </Structure>
  </Structures>
  <DisassemblerComments>
    <DisassemblerComment>
      <Address>"onlyclimbtogether-Win64-Shipping.exe"+1747786</Address>
      <Comment>camptr</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"onlyclimbtogether-Win64-Shipping.exe"+3DD8D45</Address>
      <Comment>gravity</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"onlyclimbtogether-Win64-Shipping.exe"+3E3406D</Address>
      <Comment>derr</Comment>
    </DisassemblerComment>
  </DisassemblerComments>
</CheatTable>
